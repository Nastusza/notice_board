"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var offers_service_1 = require("~/services/offers-service");
var app_settings_service_1 = require("~/services/app-settings-service");
var navigation_service_1 = require("~/services/navigation-service");
var dialogs = require("tns-core-modules/ui/dialogs");
var HomeViewModel = require("./home-view-model");
var page = null;
var vm = new HomeViewModel();
function onPageLoaded(args) {
    page = args.object;
    page.bindingContext = vm;
    // init();
}
exports.onPageLoaded = onPageLoaded;
function onTap(args) {
    init();
}
exports.onTap = onTap;
function saveSetting(args) {
    app_settings_service_1.default.Value1 = 'test';
}
exports.saveSetting = saveSetting;
function readSetting(args) {
    var testSet = app_settings_service_1.default.Value1;
    dialogs.alert(testSet);
}
exports.readSetting = readSetting;
function toUserProfile(args) {
    navigation_service_1.default.ToUserProfile();
}
exports.toUserProfile = toUserProfile;
function toMap(args) {
    navigation_service_1.default.ToMap();
}
exports.toMap = toMap;
function init() {
    vm.fetching = true;
    new offers_service_1.OffersService().loadOffers()
        .then(function (result) {
        vm.message = 'Fetch Completed Succesfully!';
        vm.offers = result;
        vm.fetching = false;
    }, function (error) {
        vm.message = error.message;
        vm.fetching = false;
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9tZS1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaG9tZS1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsNERBQTBEO0FBRTFELHdFQUF1RDtBQUN2RCxvRUFBOEQ7QUFDOUQsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLDZCQUE2QixDQUFDLENBQUM7QUFDckQsSUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFFbkQsSUFBSSxJQUFJLEdBQVMsSUFBSSxDQUFDO0FBQ3RCLElBQUksRUFBRSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7QUFFN0IsU0FBZ0IsWUFBWSxDQUFDLElBQWU7SUFDeEMsSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDekIsSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7SUFDekIsVUFBVTtBQUNkLENBQUM7QUFKRCxvQ0FJQztBQUVELFNBQWdCLEtBQUssQ0FBQyxJQUFlO0lBQ2pDLElBQUksRUFBRSxDQUFDO0FBQ1gsQ0FBQztBQUZELHNCQUVDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLElBQWU7SUFDdkMsOEJBQVEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0FBQzdCLENBQUM7QUFGRCxrQ0FFQztBQUVELFNBQWdCLFdBQVcsQ0FBQyxJQUFlO0lBQ3ZDLElBQUksT0FBTyxHQUFHLDhCQUFRLENBQUMsTUFBTSxDQUFDO0lBQzlCLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDM0IsQ0FBQztBQUhELGtDQUdDO0FBRUQsU0FBZ0IsYUFBYSxDQUFDLElBQWU7SUFDekMsNEJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUM7QUFDdEMsQ0FBQztBQUZELHNDQUVDO0FBRUQsU0FBZ0IsS0FBSyxDQUFDLElBQWU7SUFDakMsNEJBQWlCLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDOUIsQ0FBQztBQUZELHNCQUVDO0FBRUQsU0FBUyxJQUFJO0lBQ1QsRUFBRSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDbkIsSUFBSSw4QkFBYSxFQUFFLENBQUMsVUFBVSxFQUFFO1NBQzNCLElBQUksQ0FDRCxVQUFDLE1BQW9CO1FBQ2pCLEVBQUUsQ0FBQyxPQUFPLEdBQUcsOEJBQThCLENBQUM7UUFDNUMsRUFBRSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDbkIsRUFBRSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDeEIsQ0FBQyxFQUNELFVBQUMsS0FBSztRQUNGLEVBQUUsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztRQUMzQixFQUFFLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDLENBQUMsQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlIH0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy91aS9wYWdlL3BhZ2UnO1xuaW1wb3J0IHsgRXZlbnREYXRhIH0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy9kYXRhL29ic2VydmFibGUnO1xuaW1wb3J0IHsgT2ZmZXJzU2VydmljZSB9IGZyb20gJ34vc2VydmljZXMvb2ZmZXJzLXNlcnZpY2UnO1xuaW1wb3J0IHsgT2ZmZXIgfSBmcm9tICd+L3NoYXJlZC9pbnRlcmZhY2VzJztcbmltcG9ydCBTZXR0aW5ncyBmcm9tICd+L3NlcnZpY2VzL2FwcC1zZXR0aW5ncy1zZXJ2aWNlJztcbmltcG9ydCBOYXZpZ2F0aW9uU2VydmljZSBmcm9tICd+L3NlcnZpY2VzL25hdmlnYXRpb24tc2VydmljZSc7XG52YXIgZGlhbG9ncyA9IHJlcXVpcmUoXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2RpYWxvZ3NcIik7XG5jb25zdCBIb21lVmlld01vZGVsID0gcmVxdWlyZShcIi4vaG9tZS12aWV3LW1vZGVsXCIpO1xuXG5sZXQgcGFnZTogUGFnZSA9IG51bGw7XG5sZXQgdm0gPSBuZXcgSG9tZVZpZXdNb2RlbCgpO1xuXG5leHBvcnQgZnVuY3Rpb24gb25QYWdlTG9hZGVkKGFyZ3M6IEV2ZW50RGF0YSkge1xuICAgIHBhZ2UgPSA8UGFnZT5hcmdzLm9iamVjdDtcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdm07XG4gICAgLy8gaW5pdCgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb25UYXAoYXJnczogRXZlbnREYXRhKSB7XG4gICAgaW5pdCgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2F2ZVNldHRpbmcoYXJnczogRXZlbnREYXRhKSB7XG4gICAgU2V0dGluZ3MuVmFsdWUxID0gJ3Rlc3QnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZFNldHRpbmcoYXJnczogRXZlbnREYXRhKSB7XG4gICAgbGV0IHRlc3RTZXQgPSBTZXR0aW5ncy5WYWx1ZTE7XG4gICAgZGlhbG9ncy5hbGVydCh0ZXN0U2V0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvVXNlclByb2ZpbGUoYXJnczogRXZlbnREYXRhKSB7XG4gICAgTmF2aWdhdGlvblNlcnZpY2UuVG9Vc2VyUHJvZmlsZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdG9NYXAoYXJnczogRXZlbnREYXRhKSB7XG4gICAgTmF2aWdhdGlvblNlcnZpY2UuVG9NYXAoKTtcbn1cblxuZnVuY3Rpb24gaW5pdCgpIHtcbiAgICB2bS5mZXRjaGluZyA9IHRydWU7XG4gICAgbmV3IE9mZmVyc1NlcnZpY2UoKS5sb2FkT2ZmZXJzKClcbiAgICAgICAgLnRoZW4oXG4gICAgICAgICAgICAocmVzdWx0OiBBcnJheTxPZmZlcj4pID0+IHtcbiAgICAgICAgICAgICAgICB2bS5tZXNzYWdlID0gJ0ZldGNoIENvbXBsZXRlZCBTdWNjZXNmdWxseSEnO1xuICAgICAgICAgICAgICAgIHZtLm9mZmVycyA9IHJlc3VsdDtcbiAgICAgICAgICAgICAgICB2bS5mZXRjaGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICAgIHZtLm1lc3NhZ2UgPSBlcnJvci5tZXNzYWdlO1xuICAgICAgICAgICAgICAgIHZtLmZldGNoaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9KTtcbn1cbiJdfQ==